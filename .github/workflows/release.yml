name: Release
on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
jobs:
  build-artifacts:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          os:
              - ubuntu-latest
              - macOS-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          ovverride: true
      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
            name: target-${{ matrix.os }}
            path: |
              ./target/release/seth
              ./target/release/dapp
  build-linux-packages:
    runs-on: ubuntu-latest
    needs: build-artifacts
    steps:
      - uses: actions/checkout@v2
      - name: Create target directories
        run:  mkdir -p ./target/release/
      - name: Download production artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./target/release/
          name: target-ubuntu-latest
      - uses: kentik/pkg@v1.0.0-rc7
        name: Build RPM package
        id: build_rpm
        with:
          name: Dapptools-rs
          version: ${{ github.ref }}
          arch: x86_64
          format: rpm
          package: packaging/package.yml
      - uses: kentik/pkg@v1.0.0-rc7
        name: Build DEB package
        id: build_deb
        with:
          name: Dapptools-rs
          version: ${{ github.ref }}
          arch: x86_64
          format: deb
          package: packaging/package.yml
      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux-packages
          path: |
            ./${{ steps.build_deb.outputs.package }}
            ./${{ steps.build_rpm.outputs.package }}
  create-release:
    runs-on: ubuntu-latest
    needs:  [build-linux-packahosges, build-artifacts]
    steps:
      - name: Restore artifacts
        uses: actions/download-artifact@v2
        with:
          name: linux-packages
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v2.4.2
        env:
          GITHUB_TOKEN: ${{ secrets.G_TOKEN }}
      - name: Create Release
        id: create-release
        uses: softprops/action-gh-release@vv0.1.13
        env:
          GITHUB_TOKEN: ${{ secrets.G_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{steps.build_changelog.outputs.changelog}}
          files: |
            ./*.deb
            ./*.rpm
    - name: add binaries to repository server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.REPOSITORY_HOST }}
        username: ${{ secrets.REPOSITORY_HOST_USERNAME }}
        key: ${{ secrets. REPOSITORY_HOST_KEY }}
        source: "./*.deb, ./*.rpm"
        target: "/tmp"
          #    - name: add binaries to repository
          #      uses: appleboy/ssh-action@master
          #      with:
          #        host: ${{ secrets.REPOSITORY_HOST }}
          #        username: ${{ secrets.REPOSITORY_HOST_USERNAME }}
          #        key: ${{ secrets. REPOSITORY_HOST_KEY }}
          #        script: |
          #
          #
          #            # bump brew version
          ##
